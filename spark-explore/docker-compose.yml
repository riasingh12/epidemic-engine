version: '2'
services:
  ed-pyspark-jupyter:
    image: jupyter/pyspark-notebook:spark-3.3.0
    user: root
    container_name: ed-pyspark-jupyter-lab
    ports:
      - 8888:8888
      - 4040:4040
    environment:
      JUPYTER_PORT: 8888
      SPARK_UI_PORT: 4040
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-arm64
      GRANT_SUDO: yes
    volumes:
      - kafka_data:/data:rw


  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      #- KAFKA_CFG_LISTENERS=PLAINTEXT://172.30.4.125:9092,CONTROLLER://:9093
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.30.4.125:9092
      #- KAFKA_CFG_LISTENERS=PLAINTEXT://44.201.154.178:9092,CONTROLLER://:9093
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://44.201.154.178:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - kafka_default  # Ensure this matches the network your Kafka service uses

volumes:
  kafka_data:
    driver: local

    
networks:
  kafka_default:
    name: kafka_default
    driver: bridge
